name: Deploy To Ec2

on:
  push:
    branches:
      - main

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Github Repository에 올린 파일들을 불러오기
        uses: actions/checkout@v4

      - name: Test
        run: |
          ls
          pwd

      - name: JDK 17버전 설치
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: application.yml 파일 만들기
        run: |
            mkdir -p src/main/resources
            cat <<EOF > src/main/resources/application.yml
            spring:
              datasource:
                driver-class-name: com.mysql.cj.jdbc.Driver
                url: ${DATABASE_URL}
                username: ${DATABASE_USERNAME}
                password: ${DATABASE_PASSWORD}
                hikari:
                  minimum-idle: 5
                  maximum-pool-size: 10
                  idle-timeout: 600000
                  connection-timeout: 30000
                  max-lifetime: 1800000
                  auto-commit: true
                  validation-timeout: 5000
                  connection-test-query: SELECT 1
            
              jpa:
                hibernate:
                  ddl-auto: update
                properties:
                  hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
                show-sql: true
            
            s3:
              credentials:
                access-key: ${S3_ACCESS_KEY}
                secret-key: ${S3_SECRET_KEY}
                region: ${S3_REGION}
              bucket: ${S3_BUCKET}
            EOF
          env:
            DATABASE_URL: ${{ secrets.DATABASE_URL }}
            DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
            DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
            S3_ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
            S3_SECRET_KEY: ${{ secrets.S3_SECRET_KEY }}
            S3_REGION: ${{ secrets.S3_REGION }}
            S3_BUCKET: ${{ secrets.S3_BUCKET }}

      - name: 권한 부여
        run: chmod +x ./gradlew  # 실행 권한 부여

      - name: 테스트 및 빌드하기
        run: ./gradlew clean build -x test

      - name: 빌드된 파일 이름 변경하기
        run: mv ./build/libs/*SNAPSHOT.jar ./project.jar

      - name: SCP로 EC2에 빌드된 파일 전송하기
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: project.jar
          target: /home/ubuntu/BE/tobe

      - name: SSH로 EC2에 접속하기
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script_stop: true
          script: |
            rm -rf /home/ubuntu/BE/current
            mkdir /home/ubuntu/BE/current
            mv /home/ubuntu/BE/tobe/project.jar /home/ubuntu/BE/current/project.jar
            cd /home/ubuntu/BE/current
            sudo fuser -k -n tcp 8080 || true
            nohup java -jar project.jar > ./output.log 2>&1 &
            rm -rf /home/ubuntu/BE/tobe
